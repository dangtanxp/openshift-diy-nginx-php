# This nginx config file is preprocessed to replace all ${VARIABLES}
# with their values.

# Set another default user than root for security reasons
# user       www www;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes 1;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile 8192;

error_log ${OPENSHIFT_DIY_LOG_DIR}/error.log;
pid ${OPENSHIFT_RUN_DIR}/nginx.pid;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing
  # your OS, and this is probably the point at where you hire people
  # who are smarter than you, this is *a lot* of requests.
  worker_connections  8000;

  # This sets up some smart queueing for accept(2)'ing requests
  # Set it to "on" if you have > worker_processes
  accept_mutex off;

  # These settings are OS specific, by defualt Nginx uses select(2),
  # however, for a large number of requests epoll(2) and kqueue(2)
  # are generally faster than the default (select(2))
  # use epoll; # enable for Linux 2.6+
  # use kqueue; # enable for *BSD (FreeBSD, OS X, ..)
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Format for our log files
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
      '"$request" $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    keepalive_timeout 5;
    access_log ${OPENSHIFT_DIY_LOG_DIR}/access.log;

    port_in_redirect off;
    server_tokens off;

    tcp_nopush on; # off may be better for Comet/long-poll stuff
    tcp_nodelay off; # on may be better for Comet/long-poll stuff

    # Enable Gzip
    gzip  on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_min_length 1100;
    gzip_buffers     4 8k;
    gzip_proxied any;
    gzip_types
      # text/html is always compressed by HttpGzipModule
      text/css text/javascript text/xml text/plain text/x-component application/javascript 
      application/json application/xml application/rss+xml font/truetype font/opentype 
      application/vnd.ms-fontobject image/svg+xml;

    gzip_static on;

    gzip_proxied        expired no-cache no-store private auth;
    gzip_disable        "MSIE [1-6]\.";
    gzip_vary           on;

    server {
        # This will listen on all interfaces, you can instead choose a specific IP
        # such as listen x.x.x.x:80;  Setting listen 80 default_server; will make
        # this server block the default one if no other blocks match the request
        listen ${OPENSHIFT_DIY_IP}:${OPENSHIFT_DIY_PORT};

        # Here you can set a server name, you can use wildcards such as *.example.com
        # however remember if you use server_name *.example.com; You'll only match subdomains
        # to match both subdomains and the main domain use both example.com and *.example.com
        server_name  localhost;

        # It is best to place the root of the server block at the server level, and not the location level
        # any location block path will be relative to this root.
        root   ${OPENSHIFT_REPO_DIR}/web;
        
        client_max_body_size 500M;
        client_body_buffer_size 1m;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        real_ip_header    X-Forwarded-For;

        # Forces modern clients to use secure connections only for at
        # least 8 days after the header was last returned. See:
        # https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
        add_header Strict-Transport-Security max-age=691200;
        
        # Phalcon
        location @rewrites {
            #rewrite ^(.*)$ /index.php/$1 last;
            if (!-e $request_filename){
                rewrite ^/(.*)$ /index.php?_url=/$1 last;
            }
        }
        
        # Laravel
        #location @rewrites {
        #    rewrite ^(.*)$ /index.php/$1 last;
        #}

        location /{
            index index.php index.htm index.html;
            try_files $uri $uri/ @rewrites;
        }
        
        location ~ "\.(php|hh)(\?.*|)$" {
            #expires 31536000s;
            access_log off;
            log_not_found off;
            try_files $uri $uri/ @rewrites;
            fastcgi_pass unix:${OPENSHIFT_RUN_DIR}/php-fpm.socket;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_script_name;
            include fastcgi_params;
        }
        
        location = /robots.txt  { access_log off; log_not_found off; }
        location ~ /\.          { access_log off; log_not_found off; deny all; }
        location ~ ~$           { access_log off; log_not_found off; deny all; }

        # Set expires max on static file types
        location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm)$ {
            access_log off;
            log_not_found off;
            # Some basic cache-control for static files to be sent to the browser
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }

    # opt-in to the future
    add_header "X-UA-Compatible" "IE=Edge,chrome=1";
        
    # enable ngx_pagespeed
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
        #add_header "" "";
    }

    location ~ "^/pagespeed_static/" { }

    location ~ "^/ngx_pagespeed_beacon$" { }

    #pagespeed on;
    #pagespeed Disallow */m.php*;
    #
    # pagespeed RewriteLevel OptimizeForBandwidth;
    #
    #pagespeed FileCachePath ${OPENSHIFT_REPO_DIR}/web/cache;
    #
    # # let's speed up PageSpeed by storing it in the super duper fast memcached
    # # pagespeed MemcachedThreads 1;
    # # pagespeed MemcachedServers "localhost:11211";
    #
    # # disable CoreFilters
    # pagespeed RewriteLevel PassThrough;
    #
    # # enable collapse whitespace filter
    # pagespeed EnableFilters collapse_whitespace;
    #
    # # enable JavaScript library offload
    # pagespeed EnableFilters canonicalize_javascript_libraries;
    #
    # # combine multiple CSS files into one
    # pagespeed EnableFilters combine_css;
    #
    # # combine multiple JavaScript files into one
    # pagespeed EnableFilters combine_javascript;
    #
    # # remove tags with default attributes
    # pagespeed EnableFilters elide_attributes;
    #
    # # improve resource cacheability
    # pagespeed EnableFilters extend_cache;
    #
    # # flatten CSS files by replacing @import with the imported file
    # pagespeed EnableFilters flatten_css_imports;
    # pagespeed CssFlattenMaxBytes 5120;
    #
    # # defer the loading of images which are not visible to the client
    # pagespeed EnableFilters lazyload_images;
    #
    # # enable JavaScript minification
    # pagespeed EnableFilters rewrite_javascript;
    #
    # # enable image optimization
    # pagespeed EnableFilters rewrite_images;
    #
    # # pre-solve DNS lookup
    # pagespeed EnableFilters insert_dns_prefetch;
    #
    # # rewrite CSS to load page-rendering CSS rules first.
    # pagespeed EnableFilters prioritize_critical_css;
    #   
    # #centiminmod
    # pagespeed PreserveUrlRelativity on;
    # pagespeed MaxCombinedCssBytes -1;
    # pagespeed ImageResolutionLimitBytes 16777216;
    # pagespeed EnableFilters inline_google_font_css;
    #
    # pagespeed AvoidRenamingIntrospectiveJavascript on;
    # pagespeed ImageInlineMaxBytes 3072;
    # pagespeed CssImageInlineMaxBytes 204800;
    #
    # pagespeed MaxCombinedJsBytes 140000;
    #
    # # extend_cache
    # # https://developers.google.com/speed/docs/mod_pagespeed/filter-cache-extend
    # # pagespeed EnableFilters extend_cache;
    #
    # # resize_mobile_images
    # # https://developers.google.com/speed/pagespeed/module/filter-inline-preview-images#resize_mobile_images
    # pagespeed EnableFilters resize_mobile_images;
    # pagespeed MaxInlinedPreviewImagesIndex 6;
    # pagespeed MinImageSizeLowResolutionBytes 3072;
}
